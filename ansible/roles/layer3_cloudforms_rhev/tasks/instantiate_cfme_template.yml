- name: find VMs
  shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
         "https://{{ hostvars['rhevm'].vm_nics[1].ip }}/api/vms" | \
         xmllint --xpath "//vm[name='Cloudforms']" - || true
  register: cloudforms_vm
  changed_when: false
  delegate_to: "{{ infrastructure_delegate_rhel7_host_used_to_perform_xpath_select_on_curl_results }}"


- block:
    - name: get CFME template name
      shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             "https://{{ hostvars['rhevm'].vm_nics[1].ip }}/api/templates" | \
             xmllint --xpath "//template[starts-with(name,'RedHat_CFME')]/name/text()" - || true
      changed_when: false
      register: template
      failed_when: template.stdout == ''

    # - name: get storage domain UUID
    #   shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
    #          "https://{{ hostvars['rhevm'].vm_nics[1].ip }}/api/storagedomains" | \
    #          xmllint --xpath "/storage_domains/storage_domain[name='data1']/@id" - | \
    #          awk 'match($0, /.*id="(.*)"/, m) { print m[1]  }'
    #   delegate_to: "{{ infrastructure_delegate_rhel7_host_used_to_perform_xpath_select_on_curl_results }}"
    #   register: data_domain_uuid
    #   failed_when: data_domain_uuid.stdout == ''
    #   changed_when: false

    - name: instantiate CFME VM
      # ovirt:
      #   user: admin@internal
      #   url: https://rhevm.example.com
      #   instance_name: cloudforms
      #   password: "{{ root_password }}"
      #   image: "{{ template.stdout }}"
      #   resource_type: template
      shell: curl -XPOST {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             -d "{{ lookup('template','vm.xml.j2') }}" \
            "https://{{ hostvars['rhevm'].vm_nics[1].ip }}/api/vms"

    - name: wait for VM to unlock
      shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             "https://{{ hostvars['rhevm'].vm_nics[1].ip }}/api/vms" | \
             xmllint --xpath "//vm[name='Cloudforms']/status/state/text()" - || true
      changed_when: false
      register: vm_status
      until: vm_status.stdout == 'down'
      retries: 30
      delay: 10

    - name: find CFME VM disk url
      shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             "https://{{ hostvars['rhevm'].vm_nics[1].ip }}/api/vms" | \
             xmllint --xpath "//vm[name='Cloudforms']/link[@rel='disks']/@href" - | \
             awk 'match($0, /.*href="(.*)"/, m) { print m[1]  }'
      register: vm_disk_url
      failed_when: vm_disk_url.stdout == ''
      changed_when: false

    - name: create disks & attach them to VM
      shell: curl -XPOST {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             -d "{{ lookup('template','disk.xml.j2') }}" \
             "https://{{ hostvars['rhevm'].vm_nics[1].ip }}{{ vm_disk_url.stdout }}"
      with_items:
        - 26843545600
        - 107374182400
#        - 53687091200
#        - 214748364800

    - name: find CFME VM nic url
      shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             "https://{{ hostvars['rhevm'].vm_nics[1].ip }}/api/vms" | \
             xmllint --xpath "//vm[name='Cloudforms']/link[@rel='nics']/@href" - | \
             awk 'match($0, /.*href="(.*)"/, m) { print m[1]  }'
      register: vm_nic_url
      failed_when: vm_nic_url.stdout == ''
      changed_when: false

    - name: get nic mac addresses
      shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
            "https://{{ hostvars['rhevm'].vm_nics[1].ip }}{{ vm_nic_url.stdout }}" | \
            xmllint --xpath "//nic[name='{{ item.dev }}']/mac/@address" - | \
            awk 'match($0, /.*="(.*)"/, m) { print m[1]  }'
      register: vm_nic_mac
      changed_when: false
      with_items: "{{ vm_nics }}"

    #- debug: var=vm_nic_mac

    # - name: get networks ids
    #   shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
    #          "https://{{ hostvars['rhevm'].vm_nics[1].ip }}/api/networks" | \
    #          xmllint --xpath "//network[name='{{ item.item.netname }}']/@id" - | \
    #          awk 'match($0, /.*="(.*)"/, m) { print m[1]  }'
    #   register: network_ids
    #   failed_when: network_ids.stdout == ''
    #   changed_when: false
    #   with_items: "{{ vm_nic_mac.results }}"

    - name: get nic links
      shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             "https://{{ hostvars['rhevm'].vm_nics[1].ip }}{{ vm_nic_url.stdout }}" | \
             xmllint --xpath "//nic[name='{{ item.item.dev }}']/@href" - | \
             awk 'match($0, /.*="(.*)"/, m) { print m[1]  }'
      register: vm_individual_nic_url
      changed_when: false
      with_items: "{{ vm_nic_mac.results }}"

    - name: reconfigure improperly configured nics
      shell: curl -XPUT {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             -d '<nic><name>{{ item.item.item.dev }}</name><interface>virtio</interface><mac address="{{ item.item.item.mac }}" /><network><name>{{ item.item.item.netname[0:10] }}</name></network></nic>' \
            "https://{{ hostvars['rhevm'].vm_nics[1].ip }}{{ item.stdout }}"
      when: item.item.stdout != item.item.item.mac and item.stdout != ''
      with_items: "{{ vm_individual_nic_url.results }}"

    #curl -H "Content-type: application/xml" -u admin@internal:redhat01 -k -XPOST -d'<nic><name>eth1</name><interface>virtio</interface><network name="admin" /></nic>'  https://192.168.101.12/api/vms/afc4e9c4-ff2b-4b6f-b9d7-86c58712e8af/nics
    - name: create missing nics  & attach it to VM
      # shell: curl -XPOST {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
      #        -d "<nic><name>{{ item.item.item.dev }}</name><interface>virtio</interface><mac address="{{ item.item.item.mac }}" /><network id="{{ item.stdout }}" /></nic>" \
      #       "https://{{ hostvars['rhevm'].vm_nics[1].ip }}{{ vm_nic_url.stdout }}"
      shell: curl -XPOST {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             -d '<nic><name>{{ item.item.item.dev }}</name><interface>virtio</interface><mac address="{{ item.item.item.mac }}" /><network><name>{{ item.item.item.netname[0:10] }}</name></network></nic>' \
            "https://{{ hostvars['rhevm'].vm_nics[1].ip }}{{ vm_nic_url.stdout }}"
      when: item.stdout == ''
      with_items: "{{ vm_individual_nic_url.results }}"


  when: cloudforms_vm.stdout==''
  delegate_to: "{{ infrastructure_delegate_rhel7_host_used_to_perform_xpath_select_on_curl_results }}"

- name: increase CFME VM memory
  shell: rhevm-shell -E 'update vm Cloudforms --{{ item.param }} {{ item.value }}'
  with_items:
    - param: memory
      value: "{{ mem*1024*1024 }}"
    - param: memory_policy-guaranteed
      value: "{{ mem*1024*1024 }}"
  delegate_to: rhevm

- block:
    - name: find CFME VM Start URL
      shell: curl -XGET {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             "https://{{ hostvars['rhevm'].vm_nics[1].ip }}/api/vms" | \
             xmllint --xpath "//vm[name='Cloudforms']/actions/link[@rel='start']/@href" - | \
             awk 'match($0, /.*="(.*)"/, m) { print m[1]  }'
      register: cloudforms_vm_start_url
      failed_when: cloudforms_vm_start_url.stdout == ''
      changed_when: false

    - name: start CFME VM with cloud-init
      shell: curl -XPOST {{ lookup('template','roles/common/templates/rhev_curl_xml_params.j2') | trim }} \
             -d '{{ lookup('template','rhel_start_action_with_cloud-init.xml.j2') }}' \
             "https://{{ hostvars['rhevm'].vm_nics[1].ip }}{{ cloudforms_vm_start_url.stdout }}"
      #format explained here: http://www.ovirt.org/develop/api/rest-api/rest-api/ and here: https://github.com/oVirt/ovirt-engine/blob/3c7527401a0778a1e06203da932fda6fa4e72b2a/backend/manager/modules/restapi/interface/definition/src/main/resources/v3/api.xsd

    - name: wait for CFME VM to become avialable
      wait_for: host={{ hostvars['cloudforms'].vm_nics[1].ip }} port=22 timeout=600
      delegate_to: "{{ infrastructure_delegate_host_used_to_test_if_layer2_host_is_available }}"

  when: cloudforms_vm.stdout==''
  delegate_to: "{{ infrastructure_delegate_rhel7_host_used_to_perform_xpath_select_on_curl_results }}"
